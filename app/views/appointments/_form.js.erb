function validateAppointment() {
  let formId = '<%= params[:action] %>' == 'edit' ? '#edit_appointment_<%= @appointment.id.to_s %>' : '#new_appointment'
  $(formId).validate({
    rules: {
      // Rules written inline
    },
    messages: {
      'appointment[appointment_date]': {
        required: 'Appointment Date is required.'
      },
      'appointment[appointment_date]': {
        required: 'Appointment Time is required.'
      }
    },
    errorPlacement: function (error, element) {
      error.insertAfter(element);
    }
  })
}

const appointmentAppointmentDate = () => {
  $('#appointment_appointment_date').pickdate({
    format : 'dd/mm/yyyy',
    min : 0,
    onOpen: function(){
      $('#appointment_appointment_date_root').show();
    }
  });

  $('#appointment_appointment_date_root').hide();
};
appointmentAppointmentDate();

$('#appointment_appointment_time').timepicker();

$("#appointment_facility_id").on('change', function() {
  let facility_id = $(this).val();

  $.ajax({
    type: 'GET',
    dataType: 'JSON',
    url: `/facilities/${facility_id}/users`,
    success: function(response) {
      $.each(response, function(index, user) {
        let full_name = `${user.salutation}. ${user.first_name} ${user.middle_name} ${user.last_name}`.trim().replace(/\s+/, ' ')

        $("#appointment_consultant_id").append(`<option value="${user._id}">${full_name}</option>`)
      });
    }
  })
});

if ($('#appointment_consultant_id option').length == 0) {
  $("#appointment_facility_id").trigger('change');
};
